; Listing generated by Microsoft (R) Optimizing Compiler Version 19.12.25835.0 

	TITLE	C:\Users\DOTlaptop\source\repos\ch9_PLA\ch9_PLA\instructor_code.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG7408	DB	'There is a disparity in the dimension of the parallel ar'
	DB	'rays!', 0aH, 'EXITING...', 0aH, 00H
	ORG $+2
$SG7409	DB	'********', 0aH, 00H
	ORG $+2
$SG7410	DB	'TEST #%d', 0aH, 00H
	ORG $+2
$SG7411	DB	'********', 0aH, 00H
	ORG $+2
$SG7412	DB	09H, 'Original Array:', 09H, 00H
	ORG $+2
$SG7413	DB	09H, 'Actual Length:', 09H, '%d', 0aH, 00H
$SG7414	DB	09H, 'Testing Length:', 09H, '%d', 0aH, 00H
	ORG $+3
$SG7415	DB	09H, 'Return Value:', 09H, 00H
$SG7418	DB	'PASS', 0aH, 00H
	ORG $+2
$SG7419	DB	'FAIL', 0aH, 00H
	ORG $+2
$SG7420	DB	09H, 'Output Array:', 09H, 00H
$SG7421	DB	09H, 'Expected Array:', 09H, 00H
	ORG $+2
$SG7422	DB	09H, 'Sort Test:', 09H, 00H
	ORG $+3
$SG7425	DB	'PASS', 0aH, 00H
	ORG $+2
$SG7426	DB	'FAIL', 0aH, 00H
	ORG $+2
$SG7427	DB	'******************', 0aH, 00H
$SG7428	DB	'%d tests were run.', 0aH, 00H
$SG7429	DB	'%d tests passed.', 0aH, 00H
	ORG $+2
$SG7430	DB	'******************', 0aH, 00H
$SG7431	DB	0aH, 'Press any key...', 0aH, 00H
	ORG $+1
$SG7446	DB	'%d ', 00H
$SG7447	DB	0aH, 00H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_print_array
PUBLIC	_do_arrays_match
PUBLIC	_main
EXTRN	___acrt_iob_func:PROC
EXTRN	_getchar:PROC
EXTRN	_putchar:PROC
EXTRN	_puts:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	_sort_int_array:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_testArrayLenLENGTH$ = -892				; size = 4
_j$ = -888						; size = 4
_tempRealLength$ = -884					; size = 4
_testArray9$ = -880					; size = 8
_expectedArray9$ = -872					; size = 8
_testArray8$ = -864					; size = 4
_testArray13$ = -860					; size = 4
_expectedArray8$ = -856					; size = 4
_expectedArray13$ = -852				; size = 4
_expectedArrayArrayLENGTH$ = -848			; size = 4
_expectedTestResultsLENGTH$ = -844			; size = 4
_tempReturnValue$ = -840				; size = 4
_realArrayLenLENGTH$ = -836				; size = 4
_testArrayArrayLENGTH$ = -832				; size = 4
_testsPassed$ = -828					; size = 4
_testsRun$ = -824					; size = 4
_i$ = -820						; size = 4
_expectedTestResults$ = -816				; size = 60
_expectedArray14$ = -756				; size = 60
_testArray14$ = -696					; size = 60
_expectedArray15$ = -636				; size = 32
_testArray15$ = -604					; size = 32
_expectedArrayArray$ = -572				; size = 60
_testArrayLen$ = -512					; size = 60
_testArray5$ = -452					; size = 24
_testArray3$ = -428					; size = 24
_expectedArray3$ = -404					; size = 24
_expectedArray5$ = -380					; size = 24
_testArray2$ = -356					; size = 20
_expectedArray2$ = -336					; size = 20
_testArray1$ = -316					; size = 16
_testArray6$ = -300					; size = 16
_testArray10$ = -284					; size = 16
_expectedArray1$ = -268					; size = 16
_expectedArray6$ = -252					; size = 16
_expectedArray10$ = -236				; size = 16
_testArrayArray$ = -220					; size = 60
_testArray4$ = -160					; size = 12
_expectedArray12$ = -148				; size = 12
_realArrayLen$ = -136					; size = 60
_expectedArray11$ = -76					; size = 12
_expectedArray7$ = -64					; size = 12
_expectedArray4$ = -52					; size = 12
_testArray12$ = -40					; size = 12
_testArray11$ = -28					; size = 12
_testArray7$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_main	PROC
; File c:\users\dotlaptop\source\repos\ch9_pla\ch9_pla\instructor_code.c
; Line 18
	push	ebp
	mov	ebp, esp
	sub	esp, 892				; 0000037cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 22
	mov	DWORD PTR _i$[ebp], 0
; Line 23
	mov	DWORD PTR _j$[ebp], 0
; Line 24
	mov	DWORD PTR _tempReturnValue$[ebp], 0
; Line 25
	mov	DWORD PTR _tempRealLength$[ebp], 0
; Line 26
	mov	DWORD PTR _testsRun$[ebp], 0
; Line 27
	mov	DWORD PTR _testsPassed$[ebp], 0
; Line 42
	mov	DWORD PTR _testArray1$[ebp], 1
	mov	DWORD PTR _testArray1$[ebp+4], 2
	mov	DWORD PTR _testArray1$[ebp+8], 3
	mov	DWORD PTR _testArray1$[ebp+12], 4
; Line 43
	mov	DWORD PTR _testArray2$[ebp], 4
	mov	DWORD PTR _testArray2$[ebp+4], 3
	mov	DWORD PTR _testArray2$[ebp+8], 2
	mov	DWORD PTR _testArray2$[ebp+12], 5
	mov	DWORD PTR _testArray2$[ebp+16], 93	; 0000005dH
; Line 44
	mov	DWORD PTR _testArray3$[ebp], 2
	mov	DWORD PTR _testArray3$[ebp+4], 3
	mov	DWORD PTR _testArray3$[ebp+8], 4
	mov	DWORD PTR _testArray3$[ebp+12], 1
	mov	DWORD PTR _testArray3$[ebp+16], -23	; ffffffe9H
	mov	DWORD PTR _testArray3$[ebp+20], -101	; ffffff9bH
; Line 45
	mov	DWORD PTR _testArray4$[ebp], 2
	mov	DWORD PTR _testArray4$[ebp+4], 4
	mov	DWORD PTR _testArray4$[ebp+8], 3
; Line 46
	mov	DWORD PTR _testArray5$[ebp], 1
	mov	DWORD PTR _testArray5$[ebp+4], 2
	mov	DWORD PTR _testArray5$[ebp+8], 2
	mov	DWORD PTR _testArray5$[ebp+12], 1
	mov	DWORD PTR _testArray5$[ebp+16], 2
	mov	DWORD PTR _testArray5$[ebp+20], 1
; Line 47
	mov	DWORD PTR _testArray6$[ebp], 19		; 00000013H
	mov	DWORD PTR _testArray6$[ebp+4], -3	; fffffffdH
	mov	DWORD PTR _testArray6$[ebp+8], -24	; ffffffe8H
	mov	DWORD PTR _testArray6$[ebp+12], -80	; ffffffb0H
; Line 48
	mov	DWORD PTR _testArray7$[ebp], 100	; 00000064H
	mov	DWORD PTR _testArray7$[ebp+4], 99	; 00000063H
	mov	DWORD PTR _testArray7$[ebp+8], 98	; 00000062H
; Line 49
	mov	DWORD PTR _testArray8$[ebp], 1
; Line 50
	mov	DWORD PTR _testArray9$[ebp], 4919	; 00001337H
	mov	DWORD PTR _testArray9$[ebp+4], 201527	; 00031337H
; Line 51
	mov	DWORD PTR _testArray10$[ebp], -2	; fffffffeH
	mov	DWORD PTR _testArray10$[ebp+4], -1
	mov	DWORD PTR _testArray10$[ebp+8], 0
	mov	DWORD PTR _testArray10$[ebp+12], -3	; fffffffdH
; Line 52
	mov	DWORD PTR _testArray11$[ebp], 42	; 0000002aH
	mov	DWORD PTR _testArray11$[ebp+4], 3751	; 00000ea7H
	mov	DWORD PTR _testArray11$[ebp+8], 48879	; 0000beefH
; Line 53
	mov	DWORD PTR _testArray12$[ebp], 0
	mov	DWORD PTR _testArray12$[ebp+4], 2989	; 00000badH
	mov	DWORD PTR _testArray12$[ebp+8], 48879	; 0000beefH
; Line 54
	mov	DWORD PTR _testArray13$[ebp], 0
; Line 55
	mov	DWORD PTR _testArray14$[ebp], 234	; 000000eaH
	mov	DWORD PTR _testArray14$[ebp+4], 23452	; 00005b9cH
	mov	DWORD PTR _testArray14$[ebp+8], 239	; 000000efH
	mov	DWORD PTR _testArray14$[ebp+12], -234	; ffffff16H
	mov	DWORD PTR _testArray14$[ebp+16], 456	; 000001c8H
	mov	DWORD PTR _testArray14$[ebp+20], -456	; fffffe38H
	mov	DWORD PTR _testArray14$[ebp+24], 2372	; 00000944H
	mov	DWORD PTR _testArray14$[ebp+28], 29912	; 000074d8H
	mov	DWORD PTR _testArray14$[ebp+32], 0
	mov	DWORD PTR _testArray14$[ebp+36], -1
	mov	DWORD PTR _testArray14$[ebp+40], 1
	mov	DWORD PTR _testArray14$[ebp+44], 29912	; 000074d8H
	mov	DWORD PTR _testArray14$[ebp+48], 2372	; 00000944H
	mov	DWORD PTR _testArray14$[ebp+52], 234	; 000000eaH
	mov	DWORD PTR _testArray14$[ebp+56], 239	; 000000efH
; Line 56
	mov	DWORD PTR _testArray15$[ebp], -32768	; ffff8000H
	mov	DWORD PTR _testArray15$[ebp+4], 32767	; 00007fffH
	mov	DWORD PTR _testArray15$[ebp+8], 65535	; 0000ffffH
	mov	DWORD PTR _testArray15$[ebp+12], -2147483648 ; 80000000H
	mov	DWORD PTR _testArray15$[ebp+16], 2147483647 ; 7fffffffH
	mov	DWORD PTR _testArray15$[ebp+20], 0
	mov	DWORD PTR _testArray15$[ebp+24], 1
	mov	DWORD PTR _testArray15$[ebp+28], -1
; Line 59
	lea	eax, DWORD PTR _testArray1$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp], eax
	lea	ecx, DWORD PTR _testArray2$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+4], ecx
	lea	edx, DWORD PTR _testArray3$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+8], edx
	lea	eax, DWORD PTR _testArray4$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+12], eax
	lea	ecx, DWORD PTR _testArray5$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+16], ecx
	lea	edx, DWORD PTR _testArray6$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+20], edx
	lea	eax, DWORD PTR _testArray7$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+24], eax
	lea	ecx, DWORD PTR _testArray8$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+28], ecx
	lea	edx, DWORD PTR _testArray9$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+32], edx
	lea	eax, DWORD PTR _testArray10$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+36], eax
	lea	ecx, DWORD PTR _testArray11$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+40], ecx
	lea	edx, DWORD PTR _testArray12$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+44], edx
	mov	eax, DWORD PTR _testArray13$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+48], eax
	lea	ecx, DWORD PTR _testArray14$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+52], ecx
	lea	edx, DWORD PTR _testArray15$[ebp]
	mov	DWORD PTR _testArrayArray$[ebp+56], edx
; Line 62
	mov	DWORD PTR _testArrayLen$[ebp], 4
	mov	DWORD PTR _testArrayLen$[ebp+4], 5
	mov	DWORD PTR _testArrayLen$[ebp+8], 6
	mov	DWORD PTR _testArrayLen$[ebp+12], 3
	mov	DWORD PTR _testArrayLen$[ebp+16], 6
	mov	DWORD PTR _testArrayLen$[ebp+20], 4
	mov	DWORD PTR _testArrayLen$[ebp+24], 3
	mov	DWORD PTR _testArrayLen$[ebp+28], 1
	mov	DWORD PTR _testArrayLen$[ebp+32], 2
	mov	DWORD PTR _testArrayLen$[ebp+36], 0
	mov	DWORD PTR _testArrayLen$[ebp+40], -1
	mov	DWORD PTR _testArrayLen$[ebp+44], 1
	mov	DWORD PTR _testArrayLen$[ebp+48], 2989	; 00000badH
	mov	DWORD PTR _testArrayLen$[ebp+52], 15	; 0000000fH
	mov	DWORD PTR _testArrayLen$[ebp+56], 8
; Line 65
	mov	DWORD PTR _realArrayLen$[ebp], 4
	mov	DWORD PTR _realArrayLen$[ebp+4], 5
	mov	DWORD PTR _realArrayLen$[ebp+8], 6
	mov	DWORD PTR _realArrayLen$[ebp+12], 3
	mov	DWORD PTR _realArrayLen$[ebp+16], 6
	mov	DWORD PTR _realArrayLen$[ebp+20], 4
	mov	DWORD PTR _realArrayLen$[ebp+24], 3
	mov	DWORD PTR _realArrayLen$[ebp+28], 1
	mov	DWORD PTR _realArrayLen$[ebp+32], 2
	mov	DWORD PTR _realArrayLen$[ebp+36], 4
	mov	DWORD PTR _realArrayLen$[ebp+40], 3
	mov	DWORD PTR _realArrayLen$[ebp+44], 3
	mov	DWORD PTR _realArrayLen$[ebp+48], 0
	mov	DWORD PTR _realArrayLen$[ebp+52], 15	; 0000000fH
	mov	DWORD PTR _realArrayLen$[ebp+56], 8
; Line 68
	mov	DWORD PTR _expectedTestResults$[ebp], 0
	mov	DWORD PTR _expectedTestResults$[ebp+4], 0
	mov	DWORD PTR _expectedTestResults$[ebp+8], 0
	mov	DWORD PTR _expectedTestResults$[ebp+12], 0
	mov	DWORD PTR _expectedTestResults$[ebp+16], 0
	mov	DWORD PTR _expectedTestResults$[ebp+20], 0
	mov	DWORD PTR _expectedTestResults$[ebp+24], 0
	mov	DWORD PTR _expectedTestResults$[ebp+28], -2 ; fffffffeH
	mov	DWORD PTR _expectedTestResults$[ebp+32], 0
	mov	DWORD PTR _expectedTestResults$[ebp+36], -2 ; fffffffeH
	mov	DWORD PTR _expectedTestResults$[ebp+40], -2 ; fffffffeH
	mov	DWORD PTR _expectedTestResults$[ebp+44], -2 ; fffffffeH
	mov	DWORD PTR _expectedTestResults$[ebp+48], -1
	mov	DWORD PTR _expectedTestResults$[ebp+52], 0
	mov	DWORD PTR _expectedTestResults$[ebp+56], 0
; Line 71
	mov	DWORD PTR _expectedArray1$[ebp], 4
	mov	DWORD PTR _expectedArray1$[ebp+4], 3
	mov	DWORD PTR _expectedArray1$[ebp+8], 2
	mov	DWORD PTR _expectedArray1$[ebp+12], 1
; Line 72
	mov	DWORD PTR _expectedArray2$[ebp], 93	; 0000005dH
	mov	DWORD PTR _expectedArray2$[ebp+4], 5
	mov	DWORD PTR _expectedArray2$[ebp+8], 4
	mov	DWORD PTR _expectedArray2$[ebp+12], 3
	mov	DWORD PTR _expectedArray2$[ebp+16], 2
; Line 73
	mov	DWORD PTR _expectedArray3$[ebp], 4
	mov	DWORD PTR _expectedArray3$[ebp+4], 3
	mov	DWORD PTR _expectedArray3$[ebp+8], 2
	mov	DWORD PTR _expectedArray3$[ebp+12], 1
	mov	DWORD PTR _expectedArray3$[ebp+16], -23	; ffffffe9H
	mov	DWORD PTR _expectedArray3$[ebp+20], -101 ; ffffff9bH
; Line 74
	mov	DWORD PTR _expectedArray4$[ebp], 4
	mov	DWORD PTR _expectedArray4$[ebp+4], 3
	mov	DWORD PTR _expectedArray4$[ebp+8], 2
; Line 75
	mov	DWORD PTR _expectedArray5$[ebp], 2
	mov	DWORD PTR _expectedArray5$[ebp+4], 2
	mov	DWORD PTR _expectedArray5$[ebp+8], 2
	mov	DWORD PTR _expectedArray5$[ebp+12], 1
	mov	DWORD PTR _expectedArray5$[ebp+16], 1
	mov	DWORD PTR _expectedArray5$[ebp+20], 1
; Line 76
	mov	DWORD PTR _expectedArray6$[ebp], 19	; 00000013H
	mov	DWORD PTR _expectedArray6$[ebp+4], -3	; fffffffdH
	mov	DWORD PTR _expectedArray6$[ebp+8], -24	; ffffffe8H
	mov	DWORD PTR _expectedArray6$[ebp+12], -80	; ffffffb0H
; Line 77
	mov	DWORD PTR _expectedArray7$[ebp], 100	; 00000064H
	mov	DWORD PTR _expectedArray7$[ebp+4], 99	; 00000063H
	mov	DWORD PTR _expectedArray7$[ebp+8], 98	; 00000062H
; Line 78
	mov	DWORD PTR _expectedArray8$[ebp], 1
; Line 79
	mov	DWORD PTR _expectedArray9$[ebp], 201527	; 00031337H
	mov	DWORD PTR _expectedArray9$[ebp+4], 4919	; 00001337H
; Line 80
	mov	DWORD PTR _expectedArray10$[ebp], -2	; fffffffeH
	mov	DWORD PTR _expectedArray10$[ebp+4], -1
	mov	DWORD PTR _expectedArray10$[ebp+8], 0
	mov	DWORD PTR _expectedArray10$[ebp+12], -3	; fffffffdH
; Line 81
	mov	DWORD PTR _expectedArray11$[ebp], 42	; 0000002aH
	mov	DWORD PTR _expectedArray11$[ebp+4], 3751 ; 00000ea7H
	mov	DWORD PTR _expectedArray11$[ebp+8], 48879 ; 0000beefH
; Line 82
	mov	DWORD PTR _expectedArray12$[ebp], 0
	mov	DWORD PTR _expectedArray12$[ebp+4], 2989 ; 00000badH
	mov	DWORD PTR _expectedArray12$[ebp+8], 48879 ; 0000beefH
; Line 83
	mov	DWORD PTR _expectedArray13$[ebp], 0
; Line 84
	mov	DWORD PTR _expectedArray14$[ebp], 29912	; 000074d8H
	mov	DWORD PTR _expectedArray14$[ebp+4], 29912 ; 000074d8H
	mov	DWORD PTR _expectedArray14$[ebp+8], 23452 ; 00005b9cH
	mov	DWORD PTR _expectedArray14$[ebp+12], 2372 ; 00000944H
	mov	DWORD PTR _expectedArray14$[ebp+16], 2372 ; 00000944H
	mov	DWORD PTR _expectedArray14$[ebp+20], 456 ; 000001c8H
	mov	DWORD PTR _expectedArray14$[ebp+24], 239 ; 000000efH
	mov	DWORD PTR _expectedArray14$[ebp+28], 239 ; 000000efH
	mov	DWORD PTR _expectedArray14$[ebp+32], 234 ; 000000eaH
	mov	DWORD PTR _expectedArray14$[ebp+36], 234 ; 000000eaH
	mov	DWORD PTR _expectedArray14$[ebp+40], 1
	mov	DWORD PTR _expectedArray14$[ebp+44], 0
	mov	DWORD PTR _expectedArray14$[ebp+48], -1
	mov	DWORD PTR _expectedArray14$[ebp+52], -234 ; ffffff16H
	mov	DWORD PTR _expectedArray14$[ebp+56], -456 ; fffffe38H
; Line 85
	mov	DWORD PTR _expectedArray15$[ebp], 2147483647 ; 7fffffffH
	mov	DWORD PTR _expectedArray15$[ebp+4], 65535 ; 0000ffffH
	mov	DWORD PTR _expectedArray15$[ebp+8], 32767 ; 00007fffH
	mov	DWORD PTR _expectedArray15$[ebp+12], 1
	mov	DWORD PTR _expectedArray15$[ebp+16], 0
	mov	DWORD PTR _expectedArray15$[ebp+20], -1
	mov	DWORD PTR _expectedArray15$[ebp+24], -32768 ; ffff8000H
	mov	DWORD PTR _expectedArray15$[ebp+28], -2147483648 ; 80000000H
; Line 88
	lea	eax, DWORD PTR _expectedArray1$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp], eax
	lea	ecx, DWORD PTR _expectedArray2$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+4], ecx
	lea	edx, DWORD PTR _expectedArray3$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+8], edx
	lea	eax, DWORD PTR _expectedArray4$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+12], eax
	lea	ecx, DWORD PTR _expectedArray5$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+16], ecx
	lea	edx, DWORD PTR _expectedArray6$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+20], edx
	lea	eax, DWORD PTR _expectedArray7$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+24], eax
	lea	ecx, DWORD PTR _expectedArray8$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+28], ecx
	lea	edx, DWORD PTR _expectedArray9$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+32], edx
	lea	eax, DWORD PTR _expectedArray10$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+36], eax
	lea	ecx, DWORD PTR _expectedArray11$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+40], ecx
	lea	edx, DWORD PTR _expectedArray12$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+44], edx
	mov	eax, DWORD PTR _expectedArray13$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+48], eax
	lea	ecx, DWORD PTR _expectedArray14$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+52], ecx
	lea	edx, DWORD PTR _expectedArray15$[ebp]
	mov	DWORD PTR _expectedArrayArray$[ebp+56], edx
; Line 94
	mov	DWORD PTR _testArrayArrayLENGTH$[ebp], 15 ; 0000000fH
; Line 95
	mov	DWORD PTR _testArrayLenLENGTH$[ebp], 15	; 0000000fH
; Line 96
	mov	DWORD PTR _realArrayLenLENGTH$[ebp], 15	; 0000000fH
; Line 97
	mov	DWORD PTR _expectedTestResultsLENGTH$[ebp], 15 ; 0000000fH
; Line 98
	mov	DWORD PTR _expectedArrayArrayLENGTH$[ebp], 15 ; 0000000fH
; Line 102
	mov	eax, DWORD PTR _testArrayArrayLENGTH$[ebp]
	cmp	eax, DWORD PTR _testArrayArrayLENGTH$[ebp]
	jne	SHORT $LN6@main
	mov	ecx, DWORD PTR _testArrayArrayLENGTH$[ebp]
	cmp	ecx, DWORD PTR _realArrayLenLENGTH$[ebp]
	jne	SHORT $LN6@main
	mov	edx, DWORD PTR _realArrayLenLENGTH$[ebp]
	cmp	edx, DWORD PTR _expectedTestResultsLENGTH$[ebp]
	jne	SHORT $LN6@main
	mov	eax, DWORD PTR _expectedTestResultsLENGTH$[ebp]
	cmp	eax, DWORD PTR _expectedArrayArrayLENGTH$[ebp]
	je	SHORT $LN5@main
$LN6@main:
; Line 105
	push	OFFSET $SG7408
	call	_puts
	add	esp, 4
; Line 106
	mov	eax, -559038242				; deadc0deH
	jmp	$LN1@main
$LN5@main:
; Line 112
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@main
$LN2@main:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@main:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	jae	$LN3@main
; Line 114
	push	10					; 0000000aH
	call	_putchar
	add	esp, 4
; Line 115
	push	OFFSET $SG7409
	call	_printf
	add	esp, 4
; Line 116
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	push	OFFSET $SG7410
	call	_printf
	add	esp, 8
; Line 117
	push	OFFSET $SG7411
	call	_printf
	add	esp, 4
; Line 118
	mov	eax, DWORD PTR _testsRun$[ebp]
	add	eax, 1
	mov	DWORD PTR _testsRun$[ebp], eax
; Line 119
	push	OFFSET $SG7412
	call	_printf
	add	esp, 4
; Line 120
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _realArrayLen$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _testArrayArray$[ebp+eax*4]
	push	ecx
	call	_print_array
	add	esp, 8
; Line 121
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _realArrayLen$[ebp+edx*4]
	push	eax
	push	OFFSET $SG7413
	call	_printf
	add	esp, 8
; Line 122
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _testArrayLen$[ebp+ecx*4]
	push	edx
	push	OFFSET $SG7414
	call	_printf
	add	esp, 8
; Line 123
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _testArrayLen$[ebp+eax*4]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _testArrayArray$[ebp+edx*4]
	push	eax
	call	_sort_int_array
	add	esp, 8
	mov	DWORD PTR _tempReturnValue$[ebp], eax
; Line 124
	push	OFFSET $SG7415
	call	_printf
	add	esp, 4
; Line 125
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _tempReturnValue$[ebp]
	cmp	edx, DWORD PTR _expectedTestResults$[ebp+ecx*4]
	jne	SHORT $LN7@main
; Line 127
	push	OFFSET $SG7418
	call	_printf
	add	esp, 4
; Line 128
	mov	eax, DWORD PTR _testsPassed$[ebp]
	add	eax, 1
	mov	DWORD PTR _testsPassed$[ebp], eax
; Line 129
	jmp	SHORT $LN8@main
$LN7@main:
; Line 132
	push	OFFSET $SG7419
	call	_printf
	add	esp, 4
$LN8@main:
; Line 134
	push	OFFSET $SG7420
	call	_printf
	add	esp, 4
; Line 135
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _realArrayLen$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _testArrayArray$[ebp+eax*4]
	push	ecx
	call	_print_array
	add	esp, 8
; Line 136
	push	OFFSET $SG7421
	call	_printf
	add	esp, 4
; Line 137
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _realArrayLen$[ebp+edx*4]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _expectedArrayArray$[ebp+ecx*4]
	push	edx
	call	_print_array
	add	esp, 8
; Line 138
	mov	eax, DWORD PTR _testsRun$[ebp]
	add	eax, 1
	mov	DWORD PTR _testsRun$[ebp], eax
; Line 139
	push	OFFSET $SG7422
	call	_printf
	add	esp, 4
; Line 140
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _realArrayLen$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _expectedArrayArray$[ebp+eax*4]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _testArrayArray$[ebp+edx*4]
	push	eax
	call	_do_arrays_match
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN9@main
; Line 142
	push	OFFSET $SG7425
	call	_printf
	add	esp, 4
; Line 143
	mov	ecx, DWORD PTR _testsPassed$[ebp]
	add	ecx, 1
	mov	DWORD PTR _testsPassed$[ebp], ecx
; Line 144
	jmp	SHORT $LN10@main
$LN9@main:
; Line 147
	push	OFFSET $SG7426
	call	_printf
	add	esp, 4
$LN10@main:
; Line 149
	jmp	$LN2@main
$LN3@main:
; Line 151
	push	10					; 0000000aH
	call	_putchar
	add	esp, 4
; Line 152
	push	OFFSET $SG7427
	call	_printf
	add	esp, 4
; Line 153
	mov	edx, DWORD PTR _testsRun$[ebp]
	push	edx
	push	OFFSET $SG7428
	call	_printf
	add	esp, 8
; Line 154
	mov	eax, DWORD PTR _testsPassed$[ebp]
	push	eax
	push	OFFSET $SG7429
	call	_printf
	add	esp, 8
; Line 155
	push	OFFSET $SG7430
	call	_printf
	add	esp, 4
; Line 157
	push	OFFSET $SG7431
	call	_printf
	add	esp, 4
; Line 158
	call	_getchar
; Line 160
	xor	eax, eax
$LN1@main:
; Line 161
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_arraysMatch$ = -8					; size = 4
_i$ = -4						; size = 4
_modifiedArray$ = 8					; size = 4
_expectedArray$ = 12					; size = 4
_arrayLength$ = 16					; size = 4
_do_arrays_match PROC
; File c:\users\dotlaptop\source\repos\ch9_pla\ch9_pla\instructor_code.c
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
; Line 220
	mov	DWORD PTR _i$[ebp], 0
; Line 221
	mov	DWORD PTR _arraysMatch$[ebp], 1
; Line 223
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@do_arrays_
$LN2@do_arrays_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@do_arrays_:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _arrayLength$[ebp]
	jge	SHORT $LN3@do_arrays_
; Line 225
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _modifiedArray$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _expectedArray$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	cmp	edx, DWORD PTR [esi+ecx*4]
	je	SHORT $LN5@do_arrays_
; Line 227
	mov	DWORD PTR _arraysMatch$[ebp], 0
; Line 228
	jmp	SHORT $LN3@do_arrays_
$LN5@do_arrays_:
; Line 230
	jmp	SHORT $LN2@do_arrays_
$LN3@do_arrays_:
; Line 232
	mov	eax, DWORD PTR _arraysMatch$[ebp]
; Line 233
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_do_arrays_match ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_returnValue$ = -8					; size = 4
_i$1 = -4						; size = 4
_arrayToPrint$ = 8					; size = 4
_arrayLength$ = 12					; size = 4
_print_array PROC
; File c:\users\dotlaptop\source\repos\ch9_pla\ch9_pla\instructor_code.c
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 179
	mov	DWORD PTR _returnValue$[ebp], 0
; Line 181
	cmp	DWORD PTR _arrayToPrint$[ebp], 0
	jne	SHORT $LN5@print_arra
; Line 183
	mov	DWORD PTR _returnValue$[ebp], -1
; Line 184
	jmp	SHORT $LN6@print_arra
$LN5@print_arra:
; Line 185
	cmp	DWORD PTR _arrayLength$[ebp], 1
	jge	SHORT $LN7@print_arra
; Line 187
	mov	DWORD PTR _returnValue$[ebp], -2	; fffffffeH
; Line 188
	jmp	SHORT $LN6@print_arra
$LN7@print_arra:
; Line 191
	mov	DWORD PTR _i$1[ebp], 0
; Line 193
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@print_arra
$LN2@print_arra:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@print_arra:
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR _arrayLength$[ebp]
	jge	SHORT $LN6@print_arra
; Line 195
	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _arrayToPrint$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	OFFSET $SG7446
	call	_printf
	add	esp, 8
; Line 196
	jmp	SHORT $LN2@print_arra
$LN6@print_arra:
; Line 198
	push	OFFSET $SG7447
	call	_printf
	add	esp, 4
; Line 200
	mov	eax, DWORD PTR _returnValue$[ebp]
; Line 201
	mov	esp, ebp
	pop	ebp
	ret	0
_print_array ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_stdio_config.h
; Line 85
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 88
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
